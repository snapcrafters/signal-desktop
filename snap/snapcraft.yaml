name: signal-desktop
title: Signal Desktop
summary: Speak Freely - Private Messenger
description: |
  **Note: To use the Signal desktop app, you must first install Signal on your phone.**

  Millions of people use Signal every day for free and instantaneous communication anywhere in the world. Send and receive high-fidelity messages, participate in HD voice/video calls, and explore a growing set of new features that help you stay connected. Signal's advanced privacy-preserving technology is always enabled, so you can focus on sharing the moments that matter with the people who matter to you.

  - Say anything - State-of-the-art end-to-end encryption (powered by the open source Signal Protocolâ„¢) keeps your conversations secure. Privacy isn't an optional mode; it's just the way that Signal works. Every message, every call, every time.
  - Go fast - Messages are delivered quickly and reliably, even on slow networks. Signal is optimized to operate in the most constrained environment possible.
  - Feel free - Signal is a completely independent 501c3 nonprofit. Development is supported by users like you. No advertisements. No trackers. No kidding.
  - Be yourself - You can use your existing phone number and address book to securely communicate with your friends.
  - Speak up - Whether they live across town or across the ocean, Signal's enhanced audio and video quality will make your friends and family feel closer.
  - Whisper in the shadows - Switch to the dark theme if you refuse to see the light.

  **Minimize to tray**

  Per the request of the Signal developers, this snap does not use the system tray by default. This is disabled by default per the request of the Signal developers, because system tray support is not stable. Set to `false`, Signal will stop when you close it and will not have a system tray icon. You can enable it by running the following command.

      snap set signal-desktop tray-icon=true


  **Are you having issues?**

  Let us know by creating a new issue here: https://github.com/snapcrafters/signal-desktop/issues

  **Authors**

  This snap is maintained by the Snapcrafters community, and is not necessarily endorsed or officially maintained by the upstream developers.
website: https://signal.org/
contact: https://github.com//snapcrafters/signal-desktop/issues
issues: https://github.com//snapcrafters/signal-desktop/issues
source-code: https://github.com//snapcrafters/signal-desktop
license: AGPL-3.0-only
adopt-info: signal-desktop
icon: snap/gui/signal-desktop.png
version: 7.25.0

base: core24
grade: stable
confinement: strict
compression: lzo

platforms:
  amd64:
  arm64:

parts:
  nodejs:
    plugin: dump
    source: https://github.com/asdf-vm/asdf.git
    source-tag: v0.13.1
    build-packages:
      - jq
      - curl
    override-build: |
      source "./asdf.sh"

      UPSTREAM_URL="https://raw.githubusercontent.com/signalapp/Signal-Desktop/v${SNAPCRAFT_PROJECT_VERSION}"
      LINUX_CI_STEPS="$(curl -s "${UPSTREAM_URL}/.github/workflows/ci.yml")"

      NODE_VERSION="$(curl "${UPSTREAM_URL}/package.json" | jq -r '.engines.node')"
      NPM_VERSION="$(echo "$LINUX_CI_STEPS" | grep -m1 -Po "npm install -g npm@\K[^ ]+")"

      # Install the correct version of nodejs required by Signal-Desktop
      asdf plugin add nodejs
      asdf install nodejs "$NODE_VERSION"
      asdf global nodejs "$NODE_VERSION"

      # Configure NPM proxy
      npm config set -g registry https://registry.npmjs.org/
      npm config set -g proxy "${http_proxy:-}"
      npm config set -g https-proxy "${http_proxy:-}"

      # Install pinned npm version from Signal's CI
      npm install -g "npm@${NPM_VERSION}"

  # NodeJS dependency which uses a non-proxy aware fetch during its build.
  # The purpose of this part is to download the module and fetch the required file
  # using curl, which does respect the proxy, which prevents the module from trying
  # to download it with the non-proxy aware fetch.
  better-sqlite3:
    after:
      - nodejs
    plugin: dump
    source: https://registry.npmjs.org/@signalapp/better-sqlite3/-/better-sqlite3-8.8.1.tgz
    build-packages:
      - curl
    override-build: |
      # Parse the components of the URL that the module would try to download if not present
      base_uri="$(grep -Po "BASE_URI = \`\K[^\`]+" deps/download.js)"
      sqlcipher_version="$(grep -Po "SQLCIPHER_VERSION = '\K[^']+" deps/download.js)"
      openssl_version="$(grep -Po "OPENSSL_VERSION = '\K[^']+" deps/download.js)"
      tokenizer_version="$(grep -Po "TOKENIZER_VERSION = '\K[^']+" deps/download.js)"
      hash="$(grep -Po "HASH = '\K[^']+" deps/download.js)"

      # Download the file using curl, which respects the proxy configuration
      curl -s -o deps/sqlcipher.tar.gz "${base_uri}/sqlcipher-${sqlcipher_version}--${openssl_version}--${tokenizer_version}-${hash}.tar.gz"

      # Use the version of nodejs we configured before and install node deps
      source "$(pwd)/../../nodejs/build/asdf.sh"
      npm install

  signal-desktop:
    after:
      - better-sqlite3
      - nodejs
    plugin: dump
    source: https://github.com/signalapp/Signal-Desktop
    source-type: git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION
    build-packages:
      - git-lfs
      - jq
      - moreutils
      - python3
    build-environment:
      - SIGNAL_ENV: "production"
    override-build: |
      # Setup proxy access where needed
      if [[ -n "${http_proxy:-}" ]]; then
        export HTTP_PROXY="${http_proxy:-}"
        export HTTPS_PROXY="${http_proxy:-}"
        export ELECTRON_GET_USE_PROXY=1
        export GLOBAL_AGENT_HTTP_PROXY="${http_proxy:-}"
        export GLOBAL_AGENT_HTTPS_PROXY="${http_proxy:-}"
      fi

      # Use the version of nodejs we configured before
      source "$(pwd)/../../nodejs/build/asdf.sh"

      git lfs install

      # Update the package.json so the build uses the patched libraries
      cat package.json \
        | jq -r --arg f "file:${PWD}/../../better-sqlite3/build" '.dependencies."@signalapp/better-sqlite3"=$f' \
        | sponge package.json

      # Build the sticker-creator
      pushd sticker-creator
      npm ci --legacy-peer-deps
      npm run build
      popd

      # Install the dependencies for the Signal-Desktop application.
      npm install --legacy-peer-deps

      # This is the equivalent of 'npm run generate'. The upstream package.json
      # uses npm-run-all to run multiple things, which has a bug that prevents
      # this from succeeding in the snapcraft build env, so this just breaks
      # that apart into its component parts.
      npm run build-protobuf
      npm run build:esbuild
      npm run build:icu-types
      npm run build:compact-locales
      npm run sass
      npm run get-expire-time
      npm run copy-components

      # This is the equivalent of 'npm run build-linux' which also runs 'npm run generate'
      # which is broken (as described above).
      npm run build:esbuild:prod
      npm run build:release  -- --linux dir

      # Stage the built release. Directory is called 'linux-unpacked' for amd64,
      # and 'linux-arm64-unpacked' for arm64.
      mkdir -p "${CRAFT_PART_INSTALL}/opt"
      mv release/linux-*unpacked "${CRAFT_PART_INSTALL}/opt/Signal"
    stage-packages:
      - libnss3
    prime:
      - -opt/Signal/chrome-sandbox
      - -opt/Signal/resources/app.asar.unpacked/node_modules/sharp/vendor/lib
      - -opt/Signal/resources/app.asar.unpacked/node_modules/sharp/vendor/include

  local-parts:
    plugin: dump
    source: ./snap/local
    source-type: local

apps:
  signal-desktop:
    extensions: [gnome]
    command: usr/bin/signal-desktop-wrapper
    plugs:
      - browser-support
      - camera
      - home
      - network
      - audio-playback
      - audio-record
      - removable-media
      - unity7
      - screen-inhibit-control
      - password-manager-service
    environment:
      TMPDIR: $XDG_RUNTIME_DIR
      # Included temporarily until https://github.com/snapcore/snapcraft-desktop-integration/issues/28
      # is resolved.
      NOTIFY_IGNORE_PORTAL: 1
